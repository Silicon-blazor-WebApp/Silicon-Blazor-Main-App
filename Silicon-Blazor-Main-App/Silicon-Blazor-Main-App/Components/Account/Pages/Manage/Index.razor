@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using Silicon_Blazor_Main_App.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager


<div class="details">
    <section class="basic-info">
        <form method="post" asp-controller="Account" asp-action="Details" novalidate>
            <h2>Account Details</h2>
            <h5>Basic Info</h5>
            <div class="content">
                <div id="form-firstname" class="input-group">
                    <label asp-for="BasicInfo.FirstName"></label>
                    <span asp-validation-for="BasicInfo.FirstName"></span>
                    <input asp-for="BasicInfo.FirstName" />
                </div>

                <div id="form-lastname" class="input-group">
                    <label asp-for="BasicInfo.LastName"></label>
                    <span asp-validation-for="BasicInfo.LastName"></span>
                    <input asp-for="BasicInfo.LastName" />
                </div>

                <div id="form-email" class="input-group">
                    <label asp-for="BasicInfo.Email"></label>
                    <span asp-validation-for="BasicInfo.Email"></span>
                    <input asp-for="BasicInfo.Email" />
                </div>

                <div id="form-phone" class="input-group">
                    <label asp-for="BasicInfo.PhoneNumber"></label>
                    <span asp-validation-for="BasicInfo.PhoneNumber"></span>
                    <input asp-for="BasicInfo.PhoneNumber" />
                </div>

                <div id="form-bio" class="input-group">
                    <label asp-for="BasicInfo.Biography">Bio <span>(Optional)</span></label>
                    <textarea asp-for="BasicInfo.Biography"></textarea>
                </div>

                <div class="form-buttons">
                    <button class="btn-gray" type="reset">Cancel</button>
                    <button class="btn-theme" type="submit">Save changes</button>
                </div>
            </div>
        </form>
    </section>
    <hr />
    <section class="address-info">
        <form method="post" asp-controller="Account" asp-action="Details" novalidate>
            <h5>Address</h5>
            <div class="content">
                <div id="form-addressline-1" class="input-group">
                    <label asp-for="AddressInfo.AddressLine_1"></label>
                    <span asp-validation-for="AddressInfo.AddressLine_1"></span>
                    <input asp-for="AddressInfo.AddressLine_1" />
                </div>

                <div id="form-addressline-2" class="input-group">
                    <label asp-for="AddressInfo.AddressLine_2">Address line 2 <span>(Optional)</span></label>
                    <span asp-validation-for="AddressInfo.AddressLine_2"></span>
                    <input asp-for="AddressInfo.AddressLine_2" />
                </div>

                <div id="form-postalcode" class="input-group">
                    <label asp-for="AddressInfo.PostalCode"></label>
                    <span asp-validation-for="AddressInfo.PostalCode"></span>
                    <input asp-for="AddressInfo.PostalCode" />
                </div>

                <div id="form-city" class="input-group">
                    <label asp-for="AddressInfo.City"></label>
                    <span asp-validation-for="AddressInfo.City"></span>
                    <input asp-for="AddressInfo.City" />
                </div>

                <div class="form-buttons">
                    <button class="btn-gray" type="reset">Cancel</button>
                    <button class="btn-theme" type="submit">Save changes</button>
                </div>
            </div>
        </form>
    </section>
</div>

@code {
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();



    private async Task OnValidSubmitAsync()
    {
        if (Input.PhoneNumber != phoneNumber)
        {
            var setPhoneResult = await UserManager.SetPhoneNumberAsync(user, Input.PhoneNumber);
            if (!setPhoneResult.Succeeded)
            {
                RedirectManager.RedirectToCurrentPageWithStatus("Error: Failed to set phone number.", HttpContext);
            }
        }

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus("Your profile has been updated", HttpContext);
    }

    private sealed class InputModel
    {
        [Phone]
        [Display(Name = "Phone number")]
        public string? PhoneNumber { get; set; }
    }
}

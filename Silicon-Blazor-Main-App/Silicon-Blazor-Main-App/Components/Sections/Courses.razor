@page "/courses"
@using Microsoft.AspNetCore.Authorization
@attribute [StreamRendering]
@attribute [Authorize]


<section id="courses">

    <div class="container">
        <h1>Courses</h1>
        <div class="grid-content">
            @if (course == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                @foreach (var course in course)
                {
                    <a asp-action="details" asp-controller="courses" asp-route-id="@course.Id">
                        <div class="courses-content">
                            <img src="~/images/courses/@course.imageUrl" alt="">
                            @if (course.IsBestSeller == true)
                            {
                                <h4>Best Seller</h4>
                            }
                            <div class="courses-content-child">
                                <h5>@course.Title</h5>
                                <p>By @course.Author</p>
                                @if (course.DiscountPrice == 0)
                                {
                                    <h6>$@course.Price</h6>
                                }
                                else
                                {
                                    <div class="discount-price">
                                        <h2 class="discount">@course.DiscountPrice</h2>
                                        <h6>$@course.Price</h6>
                                    </div>
                                }

                                <hr>
                                <div class="content-child">
                                    <i class="fa-regular fa-clock"></i>
                                    <p>@course.Hours Hours</p>
                                    <i class="fa-light fa-thumbs-up"></i>
                                    <p>(@course.LikesInProcent.ToString("P0")) (@(Math.Round(course.LikesInNumbers / 1000, 1))K)</p>

                                </div>
                            </div>
                        </div>
                    </a>
                }
            }

            
        </div>
        <div class="work-with-us">
            <div class="work-content">
                <p>Ready to get started?</p>
                <h1>Take Your <span>Skills</span> to the Next Level</h1>
                <button class="btn-theme-s">Work with us</button>
            </div>
            <div class="image-content">
                <img src="/images/illustration-female.svg" alt="">
            </div>
        </div>
    </div>
</section>

@code {
    private CourseModel[]? course;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            course = await Http.GetFromJsonAsync<CourseModel[]>("");

        }catch(Exception)
        {
            
        }

    }

    private class CourseModel
    {
        public int Id { get; set; }
        public string Title { get; set; } = null!;
        public decimal Price { get; set; }
        public decimal DiscountPrice { get; set; }
        public int Hours { get; set; }
        public bool IsBestSeller { get; set; }
        public decimal LikesInNumbers { get; set; }
        public decimal LikesInProcent { get; set; }
        public string? Author { get; set; }
        public string imageUrl { get; set; } = null!;
    }
}
